/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as Dev__componentsRouteImport } from './routes/dev__components'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout'
import { Route as DeferredRouteImport } from './routes/_deferred'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoomIndexRouteImport } from './routes/room/index'
import { Route as RoomCreateRouteImport } from './routes/room/create'
import { Route as PathlessLayoutNestedLayoutRouteImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as RoomIdAdd_itemsRouteImport } from './routes/$roomId.add_items'
import { Route as RoomShortIdAdd_pay_itemsRouteImport } from './routes/room/$shortId.add_pay_items'
import { Route as PathlessLayoutNestedLayoutRouteBRouteImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteARouteImport } from './routes/_pathlessLayout/_nested-layout/route-a'

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const Dev__componentsRoute = Dev__componentsRouteImport.update({
  id: '/dev__components',
  path: '/dev__components',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const DeferredRoute = DeferredRouteImport.update({
  id: '/_deferred',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomIndexRoute = RoomIndexRouteImport.update({
  id: '/room/',
  path: '/room/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomCreateRoute = RoomCreateRouteImport.update({
  id: '/room/create',
  path: '/room/create',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutNestedLayoutRoute =
  PathlessLayoutNestedLayoutRouteImport.update({
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any)
const RoomIdAdd_itemsRoute = RoomIdAdd_itemsRouteImport.update({
  id: '/$roomId/add_items',
  path: '/$roomId/add_items',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomShortIdAdd_pay_itemsRoute =
  RoomShortIdAdd_pay_itemsRouteImport.update({
    id: '/room/$shortId/add_pay_items',
    path: '/room/$shortId/add_pay_items',
    getParentRoute: () => rootRouteImport,
  } as any)
const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBRouteImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)
const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteARouteImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dev__components': typeof Dev__componentsRoute
  '/test': typeof TestRoute
  '/$roomId/add_items': typeof RoomIdAdd_itemsRoute
  '/room/create': typeof RoomCreateRoute
  '/room': typeof RoomIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAdd_pay_itemsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dev__components': typeof Dev__componentsRoute
  '/test': typeof TestRoute
  '/$roomId/add_items': typeof RoomIdAdd_itemsRoute
  '/room/create': typeof RoomCreateRoute
  '/room': typeof RoomIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAdd_pay_itemsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_deferred': typeof DeferredRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/dev__components': typeof Dev__componentsRoute
  '/test': typeof TestRoute
  '/$roomId/add_items': typeof RoomIdAdd_itemsRoute
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/room/create': typeof RoomCreateRoute
  '/room/': typeof RoomIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAdd_pay_itemsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dev__components'
    | '/test'
    | '/$roomId/add_items'
    | '/room/create'
    | '/room'
    | '/route-a'
    | '/route-b'
    | '/room/$shortId/add_pay_items'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dev__components'
    | '/test'
    | '/$roomId/add_items'
    | '/room/create'
    | '/room'
    | '/route-a'
    | '/route-b'
    | '/room/$shortId/add_pay_items'
  id:
    | '__root__'
    | '/'
    | '/_deferred'
    | '/_pathlessLayout'
    | '/dev__components'
    | '/test'
    | '/$roomId/add_items'
    | '/_pathlessLayout/_nested-layout'
    | '/room/create'
    | '/room/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/room/$shortId/add_pay_items'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeferredRoute: typeof DeferredRoute
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  Dev__componentsRoute: typeof Dev__componentsRoute
  TestRoute: typeof TestRoute
  RoomIdAdd_itemsRoute: typeof RoomIdAdd_itemsRoute
  RoomCreateRoute: typeof RoomCreateRoute
  RoomIndexRoute: typeof RoomIndexRoute
  RoomShortIdAdd_pay_itemsRoute: typeof RoomShortIdAdd_pay_itemsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev__components': {
      id: '/dev__components'
      path: '/dev__components'
      fullPath: '/dev__components'
      preLoaderRoute: typeof Dev__componentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_deferred': {
      id: '/_deferred'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/': {
      id: '/room/'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof RoomIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/create': {
      id: '/room/create'
      path: '/room/create'
      fullPath: '/room/create'
      preLoaderRoute: typeof RoomCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
    '/$roomId/add_items': {
      id: '/$roomId/add_items'
      path: '/$roomId/add_items'
      fullPath: '/$roomId/add_items'
      preLoaderRoute: typeof RoomIdAdd_itemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$shortId/add_pay_items': {
      id: '/room/$shortId/add_pay_items'
      path: '/room/$shortId/add_pay_items'
      fullPath: '/room/$shortId/add_pay_items'
      preLoaderRoute: typeof RoomShortIdAdd_pay_itemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBRouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteARouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
  }
}

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeferredRoute: DeferredRoute,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  Dev__componentsRoute: Dev__componentsRoute,
  TestRoute: TestRoute,
  RoomIdAdd_itemsRoute: RoomIdAdd_itemsRoute,
  RoomCreateRoute: RoomCreateRoute,
  RoomIndexRoute: RoomIndexRoute,
  RoomShortIdAdd_pay_itemsRoute: RoomShortIdAdd_pay_itemsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
