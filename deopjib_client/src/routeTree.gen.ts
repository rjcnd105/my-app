/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DevcomponentsImport } from './routes/dev__components'
import { Route as PathlessLayoutImport } from './routes/_pathlessLayout'
import { Route as DeferredImport } from './routes/_deferred'
import { Route as IndexImport } from './routes/index'
import { Route as RoomIndexImport } from './routes/room/index'
import { Route as RoomCreateImport } from './routes/room/create'
import { Route as PathlessLayoutNestedLayoutImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as RoomIdAdditemsImport } from './routes/$roomId.add_items'
import { Route as RoomShortIdAddpayitemsImport } from './routes/room/$shortId.add_pay_items'
import { Route as PathlessLayoutNestedLayoutRouteBImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteAImport } from './routes/_pathlessLayout/_nested-layout/route-a'

// Create/Update Routes

const DevcomponentsRoute = DevcomponentsImport.update({
  id: '/dev__components',
  path: '/dev__components',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRoute = PathlessLayoutImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  id: '/_deferred',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RoomIndexRoute = RoomIndexImport.update({
  id: '/room/',
  path: '/room/',
  getParentRoute: () => rootRoute,
} as any)

const RoomCreateRoute = RoomCreateImport.update({
  id: '/room/create',
  path: '/room/create',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutNestedLayoutRoute = PathlessLayoutNestedLayoutImport.update(
  {
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any,
)

const RoomIdAdditemsRoute = RoomIdAdditemsImport.update({
  id: '/$roomId/add_items',
  path: '/$roomId/add_items',
  getParentRoute: () => rootRoute,
} as any)

const RoomShortIdAddpayitemsRoute = RoomShortIdAddpayitemsImport.update({
  id: '/room/$shortId/add_pay_items',
  path: '/room/$shortId/add_pay_items',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteAImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_deferred': {
      id: '/_deferred'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/dev__components': {
      id: '/dev__components'
      path: '/dev__components'
      fullPath: '/dev__components'
      preLoaderRoute: typeof DevcomponentsImport
      parentRoute: typeof rootRoute
    }
    '/$roomId/add_items': {
      id: '/$roomId/add_items'
      path: '/$roomId/add_items'
      fullPath: '/$roomId/add_items'
      preLoaderRoute: typeof RoomIdAdditemsImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/room/create': {
      id: '/room/create'
      path: '/room/create'
      fullPath: '/room/create'
      preLoaderRoute: typeof RoomCreateImport
      parentRoute: typeof rootRoute
    }
    '/room/': {
      id: '/room/'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof RoomIndexImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteAImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/room/$shortId/add_pay_items': {
      id: '/room/$shortId/add_pay_items'
      path: '/room/$shortId/add_pay_items'
      fullPath: '/room/$shortId/add_pay_items'
      preLoaderRoute: typeof RoomShortIdAddpayitemsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/dev__components': typeof DevcomponentsRoute
  '/$roomId/add_items': typeof RoomIdAdditemsRoute
  '/room/create': typeof RoomCreateRoute
  '/room': typeof RoomIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAddpayitemsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/dev__components': typeof DevcomponentsRoute
  '/$roomId/add_items': typeof RoomIdAdditemsRoute
  '/room/create': typeof RoomCreateRoute
  '/room': typeof RoomIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAddpayitemsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_deferred': typeof DeferredRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/dev__components': typeof DevcomponentsRoute
  '/$roomId/add_items': typeof RoomIdAdditemsRoute
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/room/create': typeof RoomCreateRoute
  '/room/': typeof RoomIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/room/$shortId/add_pay_items': typeof RoomShortIdAddpayitemsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dev__components'
    | '/$roomId/add_items'
    | '/room/create'
    | '/room'
    | '/route-a'
    | '/route-b'
    | '/room/$shortId/add_pay_items'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dev__components'
    | '/$roomId/add_items'
    | '/room/create'
    | '/room'
    | '/route-a'
    | '/route-b'
    | '/room/$shortId/add_pay_items'
  id:
    | '__root__'
    | '/'
    | '/_deferred'
    | '/_pathlessLayout'
    | '/dev__components'
    | '/$roomId/add_items'
    | '/_pathlessLayout/_nested-layout'
    | '/room/create'
    | '/room/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/room/$shortId/add_pay_items'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeferredRoute: typeof DeferredRoute
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  DevcomponentsRoute: typeof DevcomponentsRoute
  RoomIdAdditemsRoute: typeof RoomIdAdditemsRoute
  RoomCreateRoute: typeof RoomCreateRoute
  RoomIndexRoute: typeof RoomIndexRoute
  RoomShortIdAddpayitemsRoute: typeof RoomShortIdAddpayitemsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeferredRoute: DeferredRoute,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  DevcomponentsRoute: DevcomponentsRoute,
  RoomIdAdditemsRoute: RoomIdAdditemsRoute,
  RoomCreateRoute: RoomCreateRoute,
  RoomIndexRoute: RoomIndexRoute,
  RoomShortIdAddpayitemsRoute: RoomShortIdAddpayitemsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_deferred",
        "/_pathlessLayout",
        "/dev__components",
        "/$roomId/add_items",
        "/room/create",
        "/room/",
        "/room/$shortId/add_pay_items"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_deferred": {
      "filePath": "_deferred.tsx"
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout.tsx",
      "children": [
        "/_pathlessLayout/_nested-layout"
      ]
    },
    "/dev__components": {
      "filePath": "dev__components.tsx"
    },
    "/$roomId/add_items": {
      "filePath": "$roomId.add_items.tsx"
    },
    "/_pathlessLayout/_nested-layout": {
      "filePath": "_pathlessLayout/_nested-layout.tsx",
      "parent": "/_pathlessLayout",
      "children": [
        "/_pathlessLayout/_nested-layout/route-a",
        "/_pathlessLayout/_nested-layout/route-b"
      ]
    },
    "/room/create": {
      "filePath": "room/create.tsx"
    },
    "/room/": {
      "filePath": "room/index.tsx"
    },
    "/_pathlessLayout/_nested-layout/route-a": {
      "filePath": "_pathlessLayout/_nested-layout/route-a.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/_pathlessLayout/_nested-layout/route-b": {
      "filePath": "_pathlessLayout/_nested-layout/route-b.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/room/$shortId/add_pay_items": {
      "filePath": "room/$shortId.add_pay_items.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
