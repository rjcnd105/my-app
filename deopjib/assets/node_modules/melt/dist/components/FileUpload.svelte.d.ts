import { SvelteComponent } from "svelte";
import { FileUpload, type FileUploadProps } from "../builders/FileUpload.svelte";
import { type Snippet } from "svelte";
import type { ComponentProps } from "../types";
declare class __sveltets_Render<Multiple extends boolean> {
    props(): ComponentProps<FileUploadProps<Multiple>> & {
        children: Snippet<[SvelteComponent<ComponentProps<FileUploadProps<Multiple>> & /*elided*/ any, {}, {}> & {
            $$bindings?: ReturnType<__sveltets_Render<Multiple_1>["bindings"]>;
        } & {}]>;
    };
    events(): {};
    slots(): {};
    bindings(): "selected";
    exports(): {};
}
interface $$IsomorphicComponent {
    new <Multiple extends boolean>(options: import('svelte').ComponentConstructorOptions<ReturnType<__sveltets_Render<Multiple>['props']>>): import('svelte').SvelteComponent<ReturnType<__sveltets_Render<Multiple>['props']>, ReturnType<__sveltets_Render<Multiple>['events']>, ReturnType<__sveltets_Render<Multiple>['slots']>> & {
        $$bindings?: ReturnType<__sveltets_Render<Multiple>['bindings']>;
    } & ReturnType<__sveltets_Render<Multiple>['exports']>;
    <Multiple extends boolean>(internal: unknown, props: ReturnType<__sveltets_Render<Multiple>['props']> & {}): ReturnType<__sveltets_Render<Multiple>['exports']>;
    z_$$bindings?: ReturnType<__sveltets_Render<any>['bindings']>;
}
declare const FileUpload: $$IsomorphicComponent;
type FileUpload<Multiple extends boolean> = InstanceType<typeof FileUpload<Multiple>>;
export default FileUpload;
