import type { MaybeGetter } from "../types";
export type ProgressProps = {
    /**
     * The value for the progress.
     *
     * @default undefined
     */
    value?: MaybeGetter<number | undefined>;
    /**
     * The maximum value of the progress.
     *
     * @deafult 100
     */
    max?: MaybeGetter<number | undefined>;
    /**
     * The callback invoked when the value of the progress changes.
     */
    onValueChange?: (value: number) => void;
};
export declare class Progress {
    #private;
    readonly max: number;
    constructor(props?: ProgressProps);
    get value(): number;
    set value(value: number);
    /**
     * Spread attributes for the Progress root element.
     */
    get root(): {
        "data-melt-progress-root": string;
        value: number;
        max: number;
        role: string;
        "aria-valuemin": number;
        "aria-valuemax": number;
        "aria-valuenow": number;
        "data-value": number;
        "data-state": string;
        "data-max": number;
    };
    /**
     * Spread attributes for the Progress percentage element.
     * Provides a --progress CSS variable that can be used to style the progress:
     * `transform: translateX(calc(var(--progress) * -1));`
     */
    get progress(): {
        "data-melt-progress-progress": string;
        style: `--progress: ${string}; --neg-progress: ${string}`;
    };
}
