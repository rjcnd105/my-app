import type { MaybeGetter } from "../types";
type Item = {
    value: string;
    current?: boolean;
};
export type CreateTypeaheadArgs<T extends Item> = {
    /**
     * How many time (in ms) the typeahead string is held before it is cleared
     * @default 500
     */
    timeout?: MaybeGetter<number | undefined>;
    getItems: () => T[];
};
export declare const letterRegex: RegExp;
export declare function createTypeahead<T extends Item>(args: CreateTypeaheadArgs<T>): (letter: string) => T | undefined;
export {};
