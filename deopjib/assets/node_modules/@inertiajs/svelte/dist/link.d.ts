import { type CacheForOption, type FormDataConvertible, type GlobalEventsMap, type LinkPrefetchOption, type VisitOptions } from '@inertiajs/core';
import type { CancelTokenSource } from 'axios';
import type { ActionReturn } from 'svelte/action';
interface ActionElement extends HTMLElement {
    href?: string;
}
type ActionParameters = Omit<VisitOptions, 'data' | 'prefetch'> & {
    href?: string;
    data?: Record<string, FormDataConvertible>;
    prefetch?: boolean | LinkPrefetchOption | LinkPrefetchOption[];
    cacheFor?: CacheForOption | CacheForOption[];
};
type SelectedEventKeys = 'start' | 'progress' | 'finish' | 'before' | 'cancel' | 'success' | 'error';
type SelectedGlobalEventsMap = Pick<GlobalEventsMap, SelectedEventKeys>;
type ActionAttributes = {
    [K in keyof SelectedGlobalEventsMap as `on:${K}` | `on${K}`]?: (event: CustomEvent<SelectedGlobalEventsMap[K]['details']>) => void;
} & {
    'on:cancel-token'?: (event: CustomEvent<CancelTokenSource>) => void;
    oncanceltoken?: (event: CustomEvent<CancelTokenSource>) => void;
};
declare function link(node: ActionElement, initialParams?: ActionParameters): ActionReturn<ActionParameters, ActionAttributes>;
export default link;
