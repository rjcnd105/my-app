import { router, setupProgress } from '@inertiajs/core';
import escape from 'html-escape';
import App, {} from './components/App.svelte';
export default async function createInertiaApp({ id = 'app', resolve, setup, progress = {}, page, }) {
    const isServer = typeof window === 'undefined';
    const el = isServer ? null : document.getElementById(id);
    const initialPage = page || JSON.parse(el?.dataset.page || '{}');
    const resolveComponent = (name) => Promise.resolve(resolve(name));
    const [initialComponent] = await Promise.all([
        resolveComponent(initialPage.component),
        router.decryptHistory().catch(() => { }),
    ]);
    const props = { initialPage, initialComponent, resolveComponent };
    const svelteApp = setup({
        el,
        App: App,
        props
    });
    if (isServer) {
        const { html, head, css } = svelteApp;
        return {
            body: `<div data-server-rendered="true" id="${id}" data-page="${escape(JSON.stringify(initialPage))}">${html}</div>`,
            head: [head, css ? `<style data-vite-css>${css.code}</style>` : ''],
        };
    }
    if (progress) {
        setupProgress(progress);
    }
}
